syntax = "proto3";

package AFMsg; 

import "AFDefine.proto";
import "AFMsgBase.proto";

//这里主要是与游戏内容关系不是很大的协议，比如登录，创建角色，平台扣费等


enum EServerState
{
	EST_CRASH = 0;
	EST_NARMAL = 1;
	EST_BUSY = 2;
	EST_FIRE = 3;
	EST_MAINTEN = 4;
}

message ServerInfoReport		//服务器之间报告服务器状态
{
	int32   server_id = 1;
	string  server_name = 2;
	string  server_ip = 3;
	int32   server_port = 4;
	int32   server_max_online = 5;
	int32   server_cur_count = 6;
	EServerState   server_state = 7;
	int32   server_type = 8;
}

message ServerInfoReportList		//服务器之间报告服务器状态
{
	repeated ServerInfoReport server_list = 1;
}

message AckEventResult		//返回事件结果(对或错等详细)
{
	EGameEventCode event_code = 1;
	PBGUID event_object 	= 2;//playerID
	PBGUID event_client 	= 3;//clientID
	string	Parame1 	= 4;
	string	Parame2 	= 5;
	string	Parame3 	= 6;
}

////////////////////////////////////////////////////
message ReqAccountLogin		//向网关(登录服务器)申请登录
{ 
	string 			account = 2;
	string 			password = 3;
	string 			security_code = 4;
    string 			signBuff = 5;
    int32 			clientVersion = 6;
    int32 			loginMode = 7;
    int32 			clientIP = 8;
    int64 			clientMAC = 9;
	string 			device_info = 10;
	string 			extra_info = 11;
	int32 			platform_type = 12;
}

message ReqAccountLogout		//向网关(登录服务器)申请登出
{ 
	string 		account = 2;
	string 		extra_info = 3;
}

message ServerInfo		//服务器信息---这个是面向玩家的
{
    int32  		server_id = 1;
    string 			name = 2;
	int32			wait_count = 3;
	EServerState	status = 4;
}

//请求大世界服务器列表，请求单世界游戏服务器列表
enum ReqServerListType
{
	RSLT_WORLD_SERVER = 0;
	RSLT_GAMES_ERVER = 1;
};

message ReqServerList		//请求游戏服务器列表
{
	ReqServerListType type = 1;
}

message AckServerList		//服务器信息列表
{
	ReqServerListType type = 1;
	repeated ServerInfo info = 2;
}

message ReqConnectWorld		//玩家想连到世界服务器,进游戏世界--登录通过后选世界
{
	int32   world_id = 1;//想去的世界ID
	string  account = 2;//玩家帐号--客户度发送时可以不填--转发需填
	PBGUID  sender = 3;//玩家临时ID--客户度发送时可以不填--转发需填
	int32   login_id = 4;//登录服务器ID--客户度发送时可以不填--转发需填
}

message AckConnectWorldResult		//返回申请到世界服务器的结果
{
	int32   world_id = 1;//申请者想去的世界ID
	PBGUID  sender = 2;//申请者临时ID
	int32   login_id = 3;//申请者所在的登录服务器ID
	string  account = 4;//申请者的帐号
	string  world_ip = 5;//得到的世界服务器分配的网关IP
	int32  world_port = 6;//得到的世界服务器分配的端口
	string  world_key = 7;//得到的握手KEY
}

message ReqSelectServer		//玩家想选择单服务器
{
	int32   world_id = 1;//想去的服务器ID
}

message ReqKickFromWorld		//玩家想退出游戏世界
{
	int32   world_id = 1;
	string   account = 2;//帐号
}

//继续登录进大世界网关

////////////////////////////////////////////
message ReqRoleList		//请求得到角色列表
{
	int32   game_id = 1;
	string   account = 2;	
}

message RoleLiteInfo		//角色基础信息
{
	PBGUID 		id = 1;
	int32 		career = 2;
    int32 		sex = 3;
    int32 		race = 4;
    string 		noob_name = 5;
    int32 		game_id = 6;
	int32 		role_level = 7;
	int32		delete_time = 8;
	int32		reg_time = 9;
	int32		last_offline_time = 10;
	int32		last_offline_ip = 11;
	string		view_record = 12;
}

message AckRoleLiteInfoList		//角色基础信息列表
{
	repeated RoleLiteInfo char_data = 1;
}

message ReqCreateRole		//创建角色
{
	string 		account = 1;
	int32 		career = 2;
    int32 		sex = 3;
    int32 		race = 4;
    string 		noob_name = 5;
    int32 		game_id = 6;
}

message ReqDeleteRole		//删除角色
{
	string 	account = 1;
    string	name = 2;
	int32 	game_id = 3;
}

message ReqRecoverRole		//恢复角色
{
	string 	account = 1;
    string	name = 2;
	int32 	game_id = 3;
}

message ServerHeartBeat // 心跳
{
	int32 count = 1; // 数量，暂时没用到，以后可以用来做角色数量报告等
}

message RoleOnlineNotify // 玩家上线通知
{
	PBGUID guild = 1; // 公会ID
}

message RoleOfflineNotify // 玩家下线通知
{
	PBGUID guild = 1; // 公会ID
}